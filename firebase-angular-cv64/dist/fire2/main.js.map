{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/items/items.component.css","webpack:///./src/app/components/items/items.component.html","webpack:///./src/app/components/items/items.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,0FAA0F,YAAY,QAAQ,kBAAkB,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAtF;AACgB;AAU1D;IAIE,sBAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,CAAC;QAEtE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IARU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMqC,uEAAgB;OAJ1C,YAAY,CASxB;IAAD,mBAAC;CAAA;AATwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACM;AACE;AACe;AACA;AACN;AACA;AACU;AAapE;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAXrB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,uEAAa;gBACb,8DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,EAAE,MAAM,CAAC;gBAC7D,6EAAsB;gBACtB,uEAAqB;gBACrB,6EAAwB,CAAC,4DAA4D;aACtF;YACD,YAAY,EAAE,CAAE,2DAAY,EAAE,gFAAc,CAAE;YAC9C,SAAS,EAAE,CAAE,2DAAY,CAAE;SAC5B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;ACrBtB,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;;ACP3B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEhE,8BAA8B;AAC9B,qBAAqB;AACrB,IAAI;AAEJ;;;;;GAKG;AACH,mEAAmE;AAE5D,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,gCAAgC;QAC5C,WAAW,EAAE,uCAAuC;QACpD,SAAS,EAAE,gBAAgB;QAC3B,aAAa,EAAE,4BAA4B;QAC3C,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;;;;;;;;;;;;;AC1BF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<ul>\\n  <li class=\\\"text\\\" *ngFor=\\\"let item of items | async\\\">\\n    {{item.title}}\\n    {{item.description}}\\n  </li>\\n</ul>\\n\"","import { Component } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { Item } from './models/item.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css']\n})\n\nexport class AppComponent {\n\n  items: Observable<Item[]>;\n\n  constructor(public angularFirestore: AngularFirestore) {\n    this.items = this.angularFirestore.collection('items').valueChanges();\n\n    console.log(\"end\");\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { environment } from '../environments/environment';\nimport { ItemsComponent } from './components/items/items.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebase, 'cv64'), // imports firebase/app needed for everything\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features,\n    AngularFireStorageModule // imports firebase/storage only needed for storage features\n  ],\n  declarations: [ AppComponent, ItemsComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<p>\\n  items works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//export const environment = {\n//  production: false\n//};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCFS2muou-Q9H0i6XhOHexkfz5gA68uKCU\",\n    authDomain: \"tutorapp-4151b.firebaseapp.com\",\n    databaseURL: \"https://tutorapp-4151b.firebaseio.com\",\n    projectId: \"tutorapp-4151b\",\n    storageBucket: \"tutorapp-4151b.appspot.com\",\n    messagingSenderId: \"720033381663\"\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}